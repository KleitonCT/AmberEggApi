trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  BuildConfiguration: 'Release'
  BuildPlatform: 'Any CPU'
  RestoreBuildProjects: '**/*.csproj'
  Testprojects: '**/*[Tt]ests/*.csproj'  

steps:
- task: UseDotNet@2
  displayName: 'Use .Net Core sdk 2.2.x'
  inputs:
    version: 2.2.x

# - task: bleddynrichards.Assembly-Info-Task.Assembly-Info-NetCore.Assembly-Info-NetCore@2
#   displayName: 'Set Assembly Info Data'

# - task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
#   displayName: 'Prepare analysis on SonarCloud'
#   inputs:
#     SonarCloud: SonarCloud.AmberEggApi
#     organization: diegosmorf
#     projectKey: AmberEggApi
#     projectName: AmberEggApi
#     extraProperties: |
#      # Additional properties that will be passed to the scanner, 
#      # Put one key=value per line, example:
#      # sonar.exclusions=**/*.bin
#      sonar.exclusions=**/obj/**,**/*.dll
#      sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/**/coverage.opencover.xml
#      sonar.cs.vstest.reportsPaths=$(Agent.TempDirectory)/*.trx

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: '$(Parameters.RestoreBuildProjects)'
    # vstsFeed: 'e515f851-a794-40b2-a603-30214ed962ae/a86b4459-e784-456a-af3b-bd0dec42c1ce'
    verbosityRestore: Minimal

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: '$(Parameters.RestoreBuildProjects)'
    arguments: '--configuration $(BuildConfiguration) --no-restore'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: '$(Parameters.TestProjects)'
    arguments: '--configuration $(BuildConfiguration) --no-build /p:CollectCoverage=true /p:CoverletOutputFormat=opencover --logger trx'

# - task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
#   displayName: 'Run Code Analysis'

# - task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1
#   displayName: 'Publish Quality Gate Result'

- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/*WebApi*.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory) --no-build'
    zipAfterPublish: True

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()
